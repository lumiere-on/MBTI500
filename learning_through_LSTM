import pandas as pd
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras import layers
import matplotlib.pyplot as plt
from tensorflow.keras.preprocessing.text import Tokenizer
from sklearn.feature_extraction.text import TfidfVectorizer
from tensorflow.keras.layers import TextVectorization
from tensorflow.keras.preprocessing.sequence import pad_sequences
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split

# Split the dataset into training and testing sets
df_train, df_test = train_test_split(df, test_size=0.2, random_state=5)

# Extract features and labels
X_train = df_train['posts']
y_train = df_train['type']

X_test = df_test['posts']
y_test = df_test['type']

#Construct Model using LSTM 
model = tf.keras.Sequential()
model.add(layers.LSTM(100, return_sequences=True, input_shape=(X_train, y_train)))
model.add(layers.Dropout(0.25))
model.add(layers.Bidirectional(layers.LSTM(100)))
model.add(layers.Dropout(0.25))
model.add(layers.Dense(1, activation='sigmoid'))

#Show Information briefly about model 
model.summary

#Model compile
model.compile(loss = 'binary_crossentropy', optimizer=tf.keras.optimizers.Adam(learning_rate=0.001))
